version: '3.8'

# Production Docker Compose Configuration
# This is for self-hosted deployments, not Vercel

services:
  # PostgreSQL Database (External)
  # In production, use managed database service (Neon, Supabase, etc.)
  # This is only for self-hosted scenarios
  
  # Redis Cache (External)
  # In production, use managed Redis (Upstash, Redis Cloud, etc.)
  
  # Next.js Application
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: runner
      args:
        - NODE_ENV=production
    image: habitstory:latest
    container_name: habitstory-prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # These should be set via .env file or secrets management
      NODE_ENV: production
      
      # Database
      DATABASE_URL: ${DATABASE_URL}
      
      # Authentication
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      CLERK_WEBHOOK_SECRET: ${CLERK_WEBHOOK_SECRET}
      
      # Redis
      UPSTASH_REDIS_REST_URL: ${UPSTASH_REDIS_REST_URL}
      UPSTASH_REDIS_REST_TOKEN: ${UPSTASH_REDIS_REST_TOKEN}
      
      # Analytics & Monitoring
      NEXT_PUBLIC_POSTHOG_KEY: ${NEXT_PUBLIC_POSTHOG_KEY}
      NEXT_PUBLIC_POSTHOG_HOST: ${NEXT_PUBLIC_POSTHOG_HOST}
      NEXT_PUBLIC_SENTRY_DSN: ${NEXT_PUBLIC_SENTRY_DSN}
      SENTRY_AUTH_TOKEN: ${SENTRY_AUTH_TOKEN}
      
      # Application
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      
      # Security
      LOG_FULL_IPS: "false"
      LOG_LEVEL: "warn"
      ENABLE_SECURITY_HEADERS: "true"
      
    healthcheck:
      test: ["CMD", "node", "apps/web/healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: habitstory-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      web:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  default:
    name: habitstory-prod-network
    driver: bridge